import java.io.IOException;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

import javax.websocket.OnClose;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.ServerEndpoint;

@ServerEndpoint(value="/chat")
public class Chat {
	private static Set<Session> peers = Collections.synchronizedSet(new HashSet<Session>());
	private static Session currentSession;
	
	@OnMessage
	public String onMessage(String message){
		sendMessageToAll(message);
		return null;
	}
	
	@OnOpen
	public void onOpen(Session peer){
		currentSession = peer;
		peers.add(peer);
	}
	
	@OnClose
	public void onClose(Session peer){
		peers.remove(peer);
	}
	
	private void sendMessageToAll(String message){
        for(Session s : peers){
        	if(!s.equals(currentSession))
            try {
                s.getBasicRemote().sendText(message);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
}
