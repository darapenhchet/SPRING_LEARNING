package configuration;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRegistration;

import org.springframework.web.WebApplicationInitializer;
import org.springframework.web.context.ContextLoaderListener;
import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;
import org.springframework.web.servlet.DispatcherServlet;

public class Bootstrap implements WebApplicationInitializer{
	
	
	// 2. LINK TO XML FILE
/*	
 * @Override
	public void onStartup(ServletContext container) throws ServletException {
		
		XmlWebApplicationContext rootContext = new XmlWebApplicationContext();
		rootContext.setConfigLocation("/WEB-INF/rootContext.xml");		
		container.addListener(new ContextLoaderListener(rootContext));
		
		XmlWebApplicationContext servletContext = new XmlWebApplicationContext();
		servletContext.setConfigLocation("/WEB-INF/servletContext.xml");
		ServletRegistration.Dynamic dispatcher = container.addServlet("springDispatcher",
				new DispatcherServlet(servletContext));
		dispatcher.addMapping("/");
	}
*/
	
	// 3. Configuration with 
	@Override
	public void onStartup(ServletContext container) throws ServletException {
		
		 //container.getServletRegistration("default").addMapping("/resources/*", "*.css", "*.js", "*.png", "*.gif", "*.jpg");
		 
		 AnnotationConfigWebApplicationContext rootContext = new AnnotationConfigWebApplicationContext();
		 rootContext.register(RootContextConfiguration.class);
		 container.addListener(new ContextLoaderListener(rootContext));
		 
		 AnnotationConfigWebApplicationContext servletContext = new AnnotationConfigWebApplicationContext();
		 servletContext.register(ServletContextConfiguration.class);
		 ServletRegistration.Dynamic dispatcher = container.addServlet("springDispatcher", 
				 new DispatcherServlet(servletContext));
		 			
		 dispatcher.addMapping("*.html");
		
	}

}
